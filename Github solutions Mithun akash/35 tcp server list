//server code
import java.io.*;
import java.net.*;

public class ChatServer {
    public static void main(String[] args) throws IOException {
        ServerSocket server = new ServerSocket(5000);
        System.out.println("Server started... Waiting for client...");

        Socket socket = server.accept();
        System.out.println("Client connected.");

        BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
        PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
        BufferedReader keyboard = new BufferedReader(new InputStreamReader(System.in));

        String msg;
        while (true) {
            msg = in.readLine();
            if (msg == null || msg.equalsIgnoreCase("exit")) break;
            System.out.println("Client: " + msg);

            System.out.print("Server: ");
            msg = keyboard.readLine();
            out.println(msg);
            if (msg.equalsIgnoreCase("exit")) break;
        }

        socket.close();
        server.close();
        System.out.println("Connection closed.");
    }
}

//client code

import java.io.*;
import java.net.*;

public class ChatClient {
    public static void main(String[] args) throws IOException {
        Socket socket = new Socket("localhost", 5000);
        System.out.println("Connected to server.");

        BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
        PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
        BufferedReader keyboard = new BufferedReader(new InputStreamReader(System.in));

        String msg;
        while (true) {
            System.out.print("Client: ");
            msg = keyboard.readLine();
            out.println(msg);
            if (msg.equalsIgnoreCase("exit")) break;

            msg = in.readLine();
            if (msg == null || msg.equalsIgnoreCase("exit")) break;
            System.out.println("Server: " + msg);
        }

        socket.close();
        System.out.println("Disconnected.");
    }
}
